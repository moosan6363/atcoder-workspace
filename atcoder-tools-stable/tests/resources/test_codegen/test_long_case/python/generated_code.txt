#!/usr/bin/env python3
import sys


def solve(H: int, W: int, K: int, sr: int, sc: int, s: "List[str]", N: int, fr: "List[int]", fc: "List[int]", F: "List[int]", D: "List[int]"):
    return


def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    H = int(next(tokens))  # type: int
    W = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    sr = int(next(tokens))  # type: int
    sc = int(next(tokens))  # type: int
    s = [next(tokens) for _ in range(H)]  # type: "List[str]"
    N = int(next(tokens))  # type: int
    fr = [int()] * (N)  # type: "List[int]"
    fc = [int()] * (N)  # type: "List[int]"
    F = [int()] * (N)  # type: "List[int]"
    D = [int()] * (N)  # type: "List[int]"
    for i in range(N):
        fr[i] = int(next(tokens))
        fc[i] = int(next(tokens))
        F[i] = int(next(tokens))
        D[i] = int(next(tokens))
    solve(H, W, K, sr, sc, s, N, fr, fc, F, D)

if __name__ == '__main__':
    main()
