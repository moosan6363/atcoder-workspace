#!/usr/bin/env python3
import sys


def solve(L: int, N: int, M: int, K: "List[float]", A: "List[int]", S: "List[float]"):
    return


def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    L = int(next(tokens))  # type: int
    N = int(next(tokens))  # type: int
    M = int(next(tokens))  # type: int
    K = [float(next(tokens)) for _ in range(L)]  # type: "List[float]"
    A = [int()] * (N)  # type: "List[int]"
    S = [float()] * (N)  # type: "List[float]"
    for i in range(N):
        A[i] = int(next(tokens))
        S[i] = float(next(tokens))
    solve(L, N, M, K, A, S)

if __name__ == '__main__':
    main()
